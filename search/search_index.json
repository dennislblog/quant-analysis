{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"0G081iPMCEVanI5GqiPNFQ==;cbhCCzvJs9jNgE0OVtWbvgPD0AtEIHvo4CnCU8mYFEAhRazW2kEf9uYofNbMTQ/Rld868A282KVKvDXddUogmL7vzP9rTJDrSkrigM+DzzSdqCJeyNNOcaRiDAihdkEdf67S0i233mw4KNDkV1pV/rDcHrqK4qWsMUhSJzY/NABgVAUyJN0jhNDWdTehMBgXL3k6LhKZ0I7T13EcwBSFu1ykHXDYJLZSqE6RqXB03BdLUrX75bPw30hITil1J3F/ZgftlzYhkwFr/x3abkXiYERi/J5IOPwEdNKnkppyiuaM1+JpZqiY6e79F4f/oPLvZgsPNjQ7WVhhr7cCjumqrlE5ur0+WT1hAVFTHB2XD/sSFIlByisRxE3/ONMEc2p6Vnm3Bmi0gx/RvO3Ii8uqRhlR1XcmxZt5ko2lzx6dosHHYinI/UAVlR+3ay8/NM7ZrEvaVV84al3vfv63G/kymtT5zGRKjAglVhzcAQ1e9bUQdI3/jjJKjh60br+KUD3GTz6ixrINIaRoLE1BI4XrM19929p1Os6Em+alaX7fegIGZCfLCYUoHA0Qr5lN3II+S5FXWUMk/kV6ZfIrZznrQR86XqmqvBq51480yDFo5ouNYcHg6Wrtn/R3L0Mkv/c+81eZ3Y4JkgsZHIvmTwr8lkxjetqOrGIycFVQC6HXAQrdjw7a/ygPSlRzB78kmaxKfFWf7Ay+LTR/jyqIgRxgAp7bQJTMxn0HQu6f92A8LU3FKk9rFuR1aRKx2IRrDG2iH1rfP3cKh/AfQ1gnQY5tZUA6O7fyzqAbuEpE737i5o26eYX4HP9Lq4EG3L8gRplSn1lUuZ9qhHUvMn9fzLn6CH0B8/e518Kxkq+kw6tzSvzn2TDJ/qycAKrQBKLA4wpweauxvcj+4wMlFogZ3O8oqIZaRkCsNESqaAjVcp/awPaeZDhGiAWGsE3YFoqMqjpH+OdRpjUdZN67sOXfgS/KpMfjN2jTJHZzcsh+hpbyNlXKHVlnBjAPUMrJnwRWH8vh9UcDFKWEv2ljZfbqnW+Os9ijBjbmEFy+KeY0l9oXkpIHxt9xwoXy+dB6sS2iAl5ZFeduAVO/Mo7EBq+tWYgqI1i0RiCIxszgr3Q+553oG75pBmY+ihm8nSKqoWVD1FWCfEYXNz1cs+Oc656HLtkzmQ7Y7HrNQtD8Rt1/yIhCZ21qRMTILO/xGsiSDcOQzXawqPNlTNkynBdtEfZsdyCQUg==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Home"},{"location":"analysis/amm.html","text":"qwIvZ9ZzyRe+eDAWJykz4g==;+W1KmeHhi+/DR96Kdfy22DMjK8+0DZeLe3CELL7cbepkXoDfLJCcXF7c66415TvJnF5XUcVbTpv6im/GWeLWuZN7Ygfn+YsiJaNq6BG8VFt2d2R+6qvvwyrCsZDA2Nh4wby43X47uD7dS5SB2R8ChSipk4zxEeQqwPzR6tut4gDP+oNtJCnvF5XbPm/D2lchKxB9hiF6egeyyuWKf6xFxZvUXCSOhtAUW4QaDtuPZOjMckj1gB50EIoPx+istmJM;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Agent-based Modeling"},{"location":"analysis/finance.html","text":"4TlD7ReZsM3Aq4WrW7DsDw==;nVGClRocN6MM4zigM9doylCEiGH2dCfuVsUSXVZS/mj75ifgvWQLSM2kEyKvSKjsDYBN1iFS/vSgJYtGlTieLYP3BSnBn9AUO72yyzgKYTzdbo85L3YZJAznw0Oh/3Ly4wX7cTWFAyCxQqpgOHqWmg614DqIyJEG06Q6R5o4loLwP+/15mGfpBOzdqp3pcxNhAnUcveWfxNp6/OdW+1T0Q==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Finance"},{"location":"exp/config.html","text":"GFVr5w3xCDue9d7DjELhog==;X+63fWjhxsiJpHnKhyNLOPG8mn8bRwDFp+OWlrYCBljoXggbSPPL4U+jtZD/EQQy7LOzF720wcQ0iYf4ZOjzKSJ1RmZDPDP7B69+2liQRpMmuFrwh4V3gAKjzmveVH8ZhpiA8inE7tgVhPDw4zRbzki4stAwgJaxCWcDEAJhhAtlJZytzNmQ4qQn8r/7wDW2mDrgK5nkwuf19Aa4F2ekkw==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Configuration"},{"location":"extra/markdown.html","text":"c2eknelxqJUTYS8TNaaHiQ==;nO71MJ54rX7tAdtviqHJmrCUd3IMyZwtjCwT3M/MB0s=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Markdown"},{"location":"extra/plugin.html","text":"4xq/1CgbRIQl+Ar7FG9sXA==;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;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Plugins"},{"location":"extra/pymdown.html","text":"H/g1wR9AB83GRExgPRkI9g==;;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"PyMdown"},{"location":"intro/index.html","text":"WVKDOeodo6tAl5L5r+OkqA==;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;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Introduction"},{"location":"intro/goal.html","text":"tfA2902baBI5RoJpsH+Ugg==;BpiG3PX5zhO/B8B2vygYSJq8f8hNnovsri3ox6UuAE4Nm0ESuYlRIKvW2qr4R8CbLv533GFnXrLb/Dx0otI+iGRimYcmglYkqyBf5+zjcDDjH3Y+KDzi/WKdhzJTlD+gD23prS1ySlItFBM2fxZ5qcc/L9KeTGxF+dvXBUy0PCo=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Objective"},{"location":"intro/motive.html","text":"Q8zduXmPubwH3OcXSW+R5w==;b5NVp4EfJl3mpL5UWGn7Ey9zE4SX5ocZQtPPVFF/qnzNTGyDsTYZ7jFbNFxwjjvUBQSiLeZ85rY6SAZvl1GsYxELq4cQbyX0dpv/ZEfhzBUkuXNmtX37IzArfUCMrWj6mSw02pbDB2aMTO8QfIG88cfdqIIw0OHHLKN8erYYvSA=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Motivation"},{"location":"knowledge/amm/iabs.html","text":"DKJtGVAer33KK6EYVNbY0w==;;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Strategy Evaluation"},{"location":"knowledge/amm/reward_design.html","text":"lRjDqFxElFNGcsWiW25h7A==;iBY6qSrxiwFhn/mk6zFgbzdDdC0gZ5XYJbZ6wBIxoOiD3D2Zf/z0dxIXGwIr/G2N2FrQRgFdwk1zM8MYwvW5cnYq+Ga3EqTMqPHRBmYz5TmVaR6BcPwGYmHkqncsB3k7/+qY8pEIXU9sReTc9c7RNPjrZE9+O5c4KTct9Pto/fwfPJ4PkrH9SPVp1v15fqAjGai71jGEC4qGRL+f2wImEw==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Reward Engineering"},{"location":"knowledge/finance/kyle.html","text":"JMZvx3eZWHpBuHbV3l16wA==;hrSauo3NCPJn+jU5RGX2BqtI2mOlZmZ1wiS05UichJBW/jDe8/nXXIJs6rBQH2z84l6x/CWbbSUkFzt0waB0MsDHf7Ex6mPDv3iVg9M6AP9HoVqBvx0kBo6Nq6KKCstsnV0oR+FFPl7+uSs1Y609FN+/oiu9Ag22ixtAi+3QbaE=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Kyle Lambda"},{"location":"knowledge/irl/index.html","text":"Lu7DbuusL7Awd0P6+kNkPA==;wMKXTSw4JkRi5Bv2Ho8zA4HSog1crah801pt3cs3H0r0JsmwUFxIZDGdS8BRSbXr0R0EIOPKTAYEkFDCCPvB8sO2RkBxMB3hy/XYluskm23A9Kgocbk1FZRfWme0fGC8/qBBnyOIeFe+NQmOJnkUa8vZW8zk+Ca1CyWiTc+9AX7try79oV5cxV/Fzd8UWHZC4iQhZVLbxceKrLS7QowTcMmfb5FMKXSK4PlQLLtTVLq23oiaRuvEmkQdRuqr/PNm;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Introduction"},{"location":"knowledge/irl/example.html","text":"3wP9cW+eflFOpV2OP5vDJQ==;TOoQ8GZAd471iJvPWhzonHsyah4BB/MBqgb4dF7YoQsGOmDzyzmGq9puNviaXKz3sXHJOAnTgZrmLa3yPh9hthDfXdWZiHNzDXJ5EXY7vWO64b20tS3/zkjF4V2eloKAV8M8zCMDmCkNzcAGNx2SPPIui4xWazkuAUo5gpj0QvU=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Example"},{"location":"knowledge/irl/method.html","text":"1TNccBOTXOocZ0RcyRcgkw==;MEUtm291L9efqAjiAuoZAJO8l1KHDyzODEwpYlmo1bv5o5hRt7cyLqgOOodkdFv2S8DdFazFO932ga7gQ1WM9Yqe5xsrRLjEtxqdrNqg5izJFEdmr47dC23n2zXr7QA/8nMD6gGfge/pWY1jsB00btHDCzg3lXU0OAsaW8qUzzqIdSFkjLOSWHvXjdW99tpYuwfXOR0PGVsiPwv9IRy1ag==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Method"},{"location":"knowledge/other/index.html","text":"RRhTu4XQED3jkoBmmMb4VQ==;TvJ3sWw0OFLe0j1r747w/R0wsRw7+ffzBIbyMpgFy0lLQBZ+R49JhuiUTYkSeHxsk1t+ish6iTEljvODwiyLoCfJH40jyFSEUN5+/SznHeVTtfZ+71L57Elm0JW0vMxHmC4xr4c5qiKm/d+K3mR9RqwFG35k1LxgA3+foa6sgSim921J6T7031aaGlYwgCy4FjpwH4ZOKvY727ZhS4C9ng==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Introduction"},{"location":"model/data.html","text":"asphsYwc2zwOCVVAbzIHKg==;c1eJ9ojCW876OTyBEiyWbUglvwswUGebDIz84/zwt/vSWdpiTXobxQjIVyc0VbQjDCLY9DJK6B/J45Y1pvv7bQ0Jin+QPyX0/kMtyrNFgGHdHCiIwI6bZKLAOZvpCmZIU/M855ZRkSaAvrkNYzBFcuw0MJAbTwClQbVH0ojEWnQ=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Data"},{"location":"model/env.html","text":"4HM5kunxNmbnSzHNMEStOQ==;Loyi0HPz59n6ETv8vLImQoHXmp7jQdlkSM7QWcbU6WOL3NsDmgYa5OB3ziEmC2Kkptne4fWhFu6JeaXmjKSTd9AL+pzfeSc1uyz/uyLHWo2Cfcbnh7yXEQcBGwkeJMlerKHPbt/GETSSpwRiFBlVZBoV5M/kSzm3dSSLxYdX3cw=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Environment"},{"location":"model/policy.html","text":"F16QA+RJbpkGGkkq/OOe0g==;2kfARKcS5hgMdAP4CAxDnTFPl1nzYc+wIWHl5Uk38HQmiyBNJcuNTi4HiNBDNN7pdqYNxuBIZcNyoMIIm76dEQw/rnRnMcgNC4l/DDnhhwEJnHQTnoOiI+fZJyhdqyRkiejfWMteVtp6CrtZEuwyfjRTs5NQaX2BGSt+XhQj4SQ=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Policy"},{"location":"model/reward.html","text":"jEgBm5Q/LDqLk0OZiU8eyg==;TPWb5kCyTfDZ1283AGeyQ9YYIo++SqQlVrENyIax/wBy6kWBc/QPL76QKDmUouNDIuqUc5BQpjwt0DLRM7l/jhUwgkwmxuWd7ZV6YhG2qU/NPak2EgRokKTGiNw88zrlrkUc9qLkWnN8DN1hrtxnANyEMB0a2/iEZd7zlm2y4zk=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Reward"},{"location":"model/utility.html","text":"ZR/S521x32pFhWlaGtfBLQ==;rR8PBD5nCpWHmyLNQZv0UrQd7s05PvxcUcmqzCW2Wd/FiwfBZaXMjdQiG7SnzOCfliM/QXAykCUj/KoVVOjs9AR+Gn2KGb4xMrMPSoCBjol3aNw10VDluF2gkXKNjhlL+8uIDSPwjTdp6CMU7BEnBF1IQ7yxhZGrDDYg/bOCK0Q=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Utility"}]}