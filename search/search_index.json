{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"cac5oxYnOwJ/QKA/YC3hLQ==;OVOwou+jvgdeD+PdO+wAAfXJHVereZGWUBKQpKACQCVxZPom8ktgN/ILEr3SMh29G0wF+P6DnBcCtJBALzSxWM3XtsCzRZ8LmUrd0syqDSt96Y7Q/JenUnr5/XnskghZlAyp1UAKPJNcB40HzY4+RT9HiXPc0rk3ys6Gc+Dglsh3CdgEM8Ds36hzs8D+113cfWvqFhpFrzlgK5jXpou2bKp58DiJp12hDs1oy6mTh6iE85GxDPEwtb8YP4HAEkEiOGG17oln+T6xEs9A9l/+wusUPGkjilDi1Pi5HLoyiVuwlFDSEY/O5sgOtB042HNC4Ud/H0HY6JEdEZJp60DWWmm8V7LD4YXz24pb+dZxA/F2qdwpemBCzmZ+MSqDI7cXsN6Ks12KFl7VGzEJaf2tM4s+QKAbpjuU7fmmvk1N+4PpdTjRk8wmHLIo9orHhiejdt89qxkSkHCes4oHwhNpPoCYPpp3WWKa2JVYaLl45Ryzft2BQGa9hNL4cfLCDX9KBUKgtnV37TEf2O6I4eBAeP8qnviTTwtSJLqLEhWYu7gMdY07fZVA9aicx3KaVrpaTCZZfyxUg4y/5+Fue3Wjg+0PeAXKVI1g+AqtljEqYrDXCM/z/q8Ruo5wo0054Vih4+Ev4edrRJ9DS9+k3n96+wm1jcMu+owi+MQSbXwcpxdhqMytI07ygnc7U2XwVsLTpi7wU8/xOY9+kyoxRlfi8clzjvCnXBTIY/KKiKPTXsoxFEAX0AIzj6wF69FsPNzOrXC2gjAmg/+PAkPtc6SJ3KE6YWY7/1lmjGUPmXgvkzrzKhd2NBSsAGZhe71FPy6C6TN1SpG5MsAVpViNOCmSwsZ5dT0MoMLwy7zyMSriAAA5LyCKRCMJCUkZW1Qs1ChsgU9rVcSxgKOxSoUOl2CfOgP87hixJcAIAo55uCvGvxiTm7//nfaNh9cgHt3pee6a297ogY1hrDoMaJx7CGlgz3t0dAmN2R2penwmYhyRCIg1J1y59GsJ3CjEYFZJm50CAYtx6hm+nVOV58ufd9OLJ5eHwsdf/wbzwoSJ6e5ADmGolC7+tHsf0nOHlDKMHMUiCRAHt5+jtjlgskn3+GvoCPCOHvvsHqRmccfavxmh41Lz/crO4CpaKpMBxvbS9r5oToxeDz65jnRGnF4B4UPy4tV+WBpq3aj2N1yl7XoYN0fTQQrxYC6UJpcSuk8AGpN/fxzS6VrWzCtFQLxwylDHwg==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Home"},{"location":"analysis/amm.html","text":"8T8wNlomyJHIhc/w0+VnRQ==;vsK0FFmrdwhoZwgVpmSiQBSK0u5lIzaqGvs+TrBA9VjyLc1Mfww1dRMyJ5kYuARM3WdnbkMXeU7P7V0fTYwy8l7w3gSd8MLlNmvIoE2v8kbVdSeTeBXGujritHc5r3AJdzu4ZlxC7WEAD63T28En6WyRkVWcwRbP0vUM7YIgqgfxJlMKFO3+RnTmfKPklETAJwbALjmwR7uX88joz9VD06JSiueF2w7CP8kLwAzwLLjUmnINmblyefpfwSZ+lNT4;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Agent-based Modeling"},{"location":"analysis/finance.html","text":"2VTOFG6ptGAgIjx0txw6zQ==;Gd4JW6ebyBiJx9hPIUJETr4TJZV6q/rnKzXUd2e+Ju9eWnNEMLMcNmICeA+oWWM15yYmZ0VO8R5WDomEvJKvn9IERmpKZ+rjubUPdooM0kiwLg6t94eL2S+SRXMcqwMzDLKgs8jutxbC1xbqO9/izyni+49JKGao8DG5ZFnL7fFeYXN3X6/Co37v9lnc20HFMXDyXDmf6TfmMWTRhcnzQQ==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Finance"},{"location":"exp/config.html","text":"CyEEfREbIQ07tX//yld+CA==;RV13X0FjGMfvYHTkdXW6ZEmQnuFw6t2WtGi7kKv7tei3SvELDUzZT8YRHmUN2W4LFplIP7CfjcOCzGZl1z4JbR6YvB6DeoQoY2a8HEQW4AKwBfTbFIc9qmXHTWc3JuI3HaCIm2UtZoRbAmG6iExbrz5I87DAJ5lOVrtaKBxsu9n7EPU3PtX1lqg0Htc7oFEa7QmqSV5cfD9gMEvP7N+Jcw==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Configuration"},{"location":"extra/markdown.html","text":"iLUuEuSeFkuuMa0l0m6mRw==;+r6+JttNN4REnjZoiAmLD0Qa6sBOofPaSVWqnMB2QB8=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Markdown"},{"location":"extra/plugin.html","text":"9ykZXKpDtNnNQ3JjMp8T/g==;+CZOdgPdoBJCuD99fdD1ZrJjaX/4GmLJnh0LeVmtfhQ3TLcZX4l6CsSTXFrbEhC47HEnBAfKirhvJjpgh09yxB5GFSi6cb2VuhsEiItdRXFribASfST1s/GduI39D1ibTOZEk/s3puJ3SGmLryeINipv+K4xqcHoQ2s2M5ZiAM731gSDgwttLftmFoPKhgR9ZefBv/F4pwmOMAtge2CUOJ0P1Dz721TMIP4tvMPK1OfjvmyC8C4aWl7P/TOS0Ln8Kg6Hvz8EJKA96hRdVHny6/t00IsQejuXxdWYpTB9qhVmMyLhuT//5p67kdmy0NgesdvFnOWouDYZ8BE4yV/cZv3uzgJdCuiH1t0UBLDbK/14XUhDWBiP4fUAhvfP4ok6jwrIWqiabPfElW9n5A4lToxOSNZy91M81yofiG7hqDThN55CPC9oJKOjtX4BtemHHUhEjf51yFmxRFXBHK6tCYrh1J3+abfX3nXaMlWgAs0sRshsTcFj/H+/o1ubRQ3S23zNy7vllZnJma1Sn/nZIzhk32i7QXq+QmH9fX5N1mQ66vSEGHIDIp839RWaZQX9b61MHZ5U934+/38xG7G0+Ypo6TqduihB0AUglxpYQPvTnY+aPNZuAjuAsfP3qPEAX90FiDdu02ddco+q8Lvu//FbiXgElxGkJk3yquvFwkT1z5Iai06VrHn9ujQg8yg+r21sXY+c6xAyvGGsCEu2h6Uvydnkpwq54yfkFD6AbZnL9rji8/riGl6R9ivC8vn8qjHlL31j2pao5Xyyi87Ho6fhhcQkX+K9epmYtY+g2P1O9BSInW/qa+nW6lADSgSwAoBG8BC7YKtENJQ2FKzHHiOyiEtLq59Qg0jJP7AxrGmwVDl3rTY76nhNuJUmfjUT/WjIxceYnv+KdGUWTQkKc8ltaTHM52o78E+94hcnBxzy8rmd9yOJLev9F7IK/CP8Ocb453HvZsbHb8h6eweDqlFd+TYCF5RPgSCvcIo8N3o8yklak+zOgpwGU+26wGjMdik3UBpsJzr6lm45d6f3LYZiKniQGHxqiH1D2CsusbaVDJ6wG/5yUqdKT5enb2cMK3t88vBUUjXmlO/eCdjjZa1SzJrFoY8vzdvUpUvaAepEXc2OCpe0MXXF0VpXRx//2bKoq+MZyYxKs9VyxuKvIaq6dd+kGoj5vyOLIJI1W0Pc1k2scIKxWMO4vXeSrK36+g1vMcucWTrnPCVgrK8VhiBgHMfb7wPjGGJ8LRunfKfMnfZHvBeznzmV+4fu0jLSk2W1CRH1wfSUaX1kVo7ed6uzeNTeb/93107G0E73WtcSRKbwwlHu3H8eyj/lDtuT6rHhfQMcYBUfkpLD1cb2Fhb1zQ27bMPfZ4rnenCsQP686JPkBi70wRIN/W7EaHglJ17/5yMATzLTDUtj642KkVla7fiUO6jM1EfFaWI090AiwCDG0yD50PrUxRDgjqxEGTuRcXws5EuCRMAo7fQ0sYV3CV/ORQATCDaVRd0//AaD0VUOZ/4OAKZVGk5QuVT7gbwqQ+5pA64u4Twbv1NCsO8V8AHsqgB5VWF3HtnPXcU9yRNt7tymYlrG1Tpy3Q94p4qnbBvpPc78Gl7kslTq+wnM3eiXQqmg5RSRuYT0H/wTCGWd+hOHGf+AZKbQjnBRVGK0trAjnHU55sKh5ZJdf37B8RteKOHX1f1s0ndOnNwA3k0RXXgbtZxUTO+OiyBkcVGXM8OCBzlahQMMuwkmv77qk3Y+3ffcoVYbRgQGmkEfDxcxxokkINesNhLK6FO/YXO3mqI6hSLyjkWpikOLURpw4LNLs783dR0NVDhXb3AFqDLfvVFTRvxolgcLUVrxGdVN8/5wOSMxAD9u80Cx6cd25Hqb69eZLzZ7SRfRa1gz9yxkhIv+DnQOwVig9vKsO6DJB45kp7vnSsTzlHoUuMf1DEtIf/frhRe6znI241iGSWnalIk3/3k7Kl0QvWYwtjIHWY2Ac92BVDmeLtdbH8/oSM8R99YmqeT9S5ilLr0jxwYaCn6KIGUYxrHh2cNtlOicTnZRituoVABaQ51YyX+yVt9nibEcSLiSd3V/efYZSmJbdsYKfJa5ECloGuylzbTdK3LukIw7zwJ2T8NI/9IaS0oqU2qEbMzpcE2758u7hCZNYIOKJfTi9TtcRRXGTFKSn5vmfJ3DLKXrsOLvHihUWfC0mwgqlibKTnhMygXOKqeQnRV7ca0dQBxulgxGMve5fL7hmapm682jVAB3X/dJ4rzNlQUcmPCJ5WPWQqW5ZJVjzt78e27xcWcizNg2RepIwIEE8v67rfgqbVpusrNeW7aZm1xfxGTOPni2ZmrBJMhbn0H6lIK5ZW8eTkpjCB6mvnqV4RWDILEdW2JKyDFByib4wKaj8HFkQsL7Z3PhjFBkOMru9ZUTm18w/c4tNXKDYT7SEi/IfuKxSZQLgPLWpHA2zZWOfRQpK+oJoIWLvtL7r3e1pCu7Jv4B4XbddxDeE7zrNEa+Geixy2rbxR0PPjcnf3TIo3KQ0TmzHq2xTpZAxyTXTep5aG5Y7ALwtfbr/BGWA7Sj3HFTYJ/amPmTCqigg00a43cAHhR9F6tBIU1EyhuW8aTBCyY6pdprYkNl00RbYajGznmSrtBdMbDmd6obo6OcZM4XGFE897ygguLwUizpmscQ0mQE6FCPEUGobNfkust+aAvQWBU08440yyJKw8/p0g1D/4cbRPovRx3dEpyqETQgV4oN4cOt3b4t/duhln2tle6L3isvTfzRDlWNivEoe3on1io7ozCaSbZNr8M9rY7D0BZJCbeVg/YRoG5ggrASYGHpruyI1zyjUDB/eTmjLJtzhqzsJOPkfFc7fB5O/YJSSPmKWf58Q92UKcOMFKrEavaSZp8xcZSNCag/2ZtQMOU0+UKz4oOA/ZDALYdPTnKXO75IoCliOTYKoBTqpMb9n7h3jtvC2wMVVzCotMYvPlZcTnHCo0MgZp44zkY1MGTU1j/RwqWFgOJtAR/eS0SRuOV0e+gGWwUF3QMjeg+eEimE9ICDmV2VOMoOpPuyjg+NF93dd0zQBrsf1H2+0auaf2/4gBMzVUTDhsIdVeGEPY7KZqofVfEog/AA2TLpJjcuHwhLXd6eOk1e2RnOVIaogOlQSPdDFlf+quFEvzs6OaToMmQgKNXmVk7z7eIC/e9Q+JbHvnW3E1pCiT398XXicTvdqAxoItYVv5XjfsI+1oJMt/7iowp1L3SY6ihIO9dFVHW66PNshreAsuIDzKhHIvt1ddY5AOPW/IuIk0qyGxFBpHKjtiKIpfOcI/SpGD6kualUipyhvnqP31XHwZfOgNJe8BmhrRRT5R9SgqzWHtdgtVTHFXsuoDQhLeVO1eZfZSvtd1kG5e/XUsrCw0gTsz70zNxrl7kuJLu98u/cFk3vp0EsFd82LCa9h33yBveVQ5oOjWcRHZ+RMfVpREOn+hYH3B4ckizCi5jlnTRoPgp1f2IJiNyTSdJb0ZoG7PDlUEZmO8oU4UO7U9vLyxWbQebI00rShLCkkl2KvfBEBbDhSUi7nYHeNQqK6rHXq8kfYNffvybDjzJZ0kd9vWxFqBH+lLMySfcuYd+eolM61TlwBFbcjkEF1lXWuQjIzWwp9RwzqzHzxufufCd6LNjuWJwjK5p882D+wYKaJDCaaQ77SJg4Utp4byj2d7XJa0ckU+WS0MaDGpaSlZCvnHEptoXxu2P+LAgiRBjLWuxiaM6iLNKF5I8H/YgjOUd6+YO3OFs2hs6tttqiZWITkOTJivvG++oq7PvEwaBePcX27eXMZgyBS2ailRigCyd6X+feII80ZSOUzx65woyPKvHW689qgSD8BA68VJ/NqoDO4edJwtkOsw4WbsEU3e7r37/cDYYdnIILR4wkXheHSyV1pv4aVEs5Db/QjEtjsSlzFVsJedduL8MGIPJxnH65f7Pce/+WMTHcVDlYImY9/wl7D8KoZIZTWBYoHCih/IX+ofsPQtM/3C6ruLwX6s7wbdTm8ar0pOkfQPZ/6AQk/S6RXpuHDErkPgilZd3ER0a5IqwaMlVimlm/6mAPaR0WLMKBmSMFixZKEUCT06fS2iuHeFRRHNyKPHUBXzqruGTEhEwTU7zqW9HeCykliFZj5WxEbuIjIK9J09f7F2RqxRN82aRsOK2tVVH2miu8wmekFKvegJpPNmHnqT0lfOp67FaoILdmkxHemI99jHVPhGHIVCSOxTupSMmafnll/hL0kotxEkLUV0LcbjqkjCFC+Z4m2EBvDYn5nt7SgSaEC4ozC5+CqavZgdAWb2Cr4klbJ0feQWElX0gYAvoUiOGf4aCMpcMINqFE1BBa7/dvEVdB99qhEVM6Pce6PUovod9fWdvFu9jv1XmH89AjXmNYGkkviMiPbK/C/qm6Xxa6bbutNSlYHzcHdFH3ZzmdDw0lgM2Q2EvI4cUcZrrY7y0WIx8AXIZWGtf8wdN3J7s39ieo9QcQzG2SdlC961EShUNwQ8gp+tZdHJfxAwJzDkBX4Cw1kQDYtVBw4NrAdQJSoo7cCdrUGHtj35Vnc9OM8ZAwI0htpDWk9mzKkae3J7IZcg/2Z6EsR1HA1fTCj6F5O2SEYKhsySbv++flcZ1ooEU72cIRPOTVJi0azThZxtds1XrOqN9m1AO0hXqY3YTFDNyZPGa1qYI5yO8V6SmXF7wwK4O+wiTFYQgnAaFx0ZSTLjarWtKWUFvKLgC25QGaUJbKnUBCkeApbeNyfD0gV5rh/HVZdqW4fEdx3VsWaho24IScE7UZS/6b+kqZIiJFWirsl4l7Y59WzU8gydU2ByeWXMTrsSbuvPb32JhzeNxGc8UlDX3MblYKqwf2yQ4N2uwzM2mWZ1JPWFTnHrr+zK7bI8kQ0S7oslh9SSEuBJNMYCHuaUqPTXwx8k2j/skCykcwNwyPvKHNJtMv4hak8RM/9zt7M2LEjXHyYN218B62o0HVgOXaYPBpm+OXhuN1BfmJX+BnEYxs3Q3YtQYco1jneoQetZGiehln7KTG4AKc+Z1EybgMYyRg+Za2uldCpkBr4GOBf4dKsvlbx+p+8CTfY23eIjCTn9w70mCx9LRBL7chEHeGeLA9oaZ00hDf795qzzsAAWVDZCC2wRuVn2hBzSUPqkF0R1gVUwNjZ1CtZaWYwdnfapzaI/mM0K5KPP8QnGh2Xjj4DSQd6k5I/nqZ+bHfvx/IWk7TLrZUZYPVJflF6OXAr+bx1TcyRQvqDWlRVl/5wWM+Prgv4lU0nu/GJMRfgAER2lIjKThdUKcYJug4RJt5+FrOs/y5yg9ZSd8mf945qt0+tniIbSAvqgfDW4vRRHh2FeaMvurFI5CRuhryJum6Knv2/cUM81Iadf6P+FKE0u2wVXbOPu5i/Gi7sQycskHBBRHQTdwgpoOZrSS04xT+c6SPv98XRRWRiV4IlCCXwcapf5TGJzX0Aoe3aM9coeJ+uXrOdD3MCGXpZ/VS8lfoXpY1Zi16yrThtrhpb3tReOvroKvGdIgK5o1jKXJAkplfAzCK/KvCTmafERgmDzHdpsP72teXQRpIgpI3jnwJ4KuAiq+hOgJKjCFB+CDjrb9aKR0yYKDReD8kPoQvyH59hkC4pOlaPghjFSyI9oRCbJj0iaeAy29YQGzIRU32+nbdiSOJycjpo++QOZk1VhztBg04EZ/gsyZUExM1m34LyyHwOMsCdwwlEj2lxslF8LkH8+GucZIKKtLfff0uQzsolpAh2Sp0kumWlErtBxktvrOxMmqIA+hFT6jnrvmb0E22jrai+IfhUb6/YIkJgxGg7E5Ppy56EephVgjsQFmcc06nl2bGwelpKDcpSLJY20yYsoHfPu6ZLXCj4L2nPoEVvm3AWBxXkxe3icsR7y1ttnmThaIX+EcIoKM1MQnd8JWPlHWAdJFVD9MYQN+Tl5LKIZ8004NgkDl13wyD1XwIhZkVd8qeeaQtmVeRQVVEUU8qMGfYTxloOWZFF4Yrk6eeRSJ2CBT0LNcvTn965rW9GuaWH7qYSZ6QYqN0FnkPWOiSd8touXm/VZmYcJH6O4xoi1PkUGv6nQCTWZaNAeGIdWOySFF2TuyTVaKF3bEFu/ZuCSAy7CPAVbMJC0NEWZ2CvVKo9XK+EoesObZ0JUnXp0RLJ5WEMZbvSPAY8L4s8DnlSzhAvXqLF0TOcd61ferdW/4c+TRXkigphk2NvzqHyAwdwy0f60g+uoUpGBcEbGCQemo3VEB0kjh1BICKgRp6PjNSEtigydcEupYOibOjo2BggN+H//DzgpCDUTHu1wDtdTSzW8rq1EYJdk/n6OQ1SCYUQS1Bb7Y/xCsIVyF36hAwDymqDatWG1Nofcwe/UUEDL6uAR4EEIivSCeO0XAAodosJcpzvBnMjxRGcnpLbEvFhv8IotcMaRDnN3xPEpGHlOYABUAWKCHM0MjEqGijuK7De8H1tnYqmJsDSiDcXg1WPiTi0O4pgn7yb+NZ411d+aFCDiPXQBgQ2h9KbC4RUch4t1k/WOfkFjUvmK2RQ4/iMu8C0JTZFDq9mM8PKdvbIL/0JcCwuAdZA17cHPIIpgrm/b/H9LlB7fTGt1Ozk2El6ej39+hpHTOJ/hL7c3uPLjxCaTL5dYoGXfy3XmGdYYIw2Z1Q0AYdIvHs9LoUyvYfGJtbWax2eUHaxSjUEeUMyUWJ5F9mwlWdrneB2uWHLyVbUpESHooERGiRpKCuOf1BYlEdgN4AZIzA/pkdcRB0MmxwuTJLppOe+i+zBdQJY2pgI1sqP/qcqpj1EGhyaVhUGkRkIQbeoxZoVctNc7hbKmK8oi9nAwUpv1Y6I5+QtXCJ4LEtMZl7hCAoP+xS/VHMBdfapLJ1Q2DL40/4qpaoNlGg89ojWi7Npz7C9X0OLQP2UwO9lvk9k9AazC5UhgBmARLpIqsnwihn3pezQQK9PKNGNUJU+e+UyaT7Lw4yP8MTrj9AxwB3yuvTu6Ua4ih4ICmh4IZgu+EQ1WjW9rIWFq+kbsFtircEhxqeRVTDBYGXzt1W7aiz2IsCu39cjv42+n/9l6n6kEfQy2bU6gbc1Bc=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Plugins"},{"location":"extra/pymdown.html","text":"YyG9ug9TMXYYB5/Lwf4mug==;;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"PyMdown"},{"location":"intro/index.html","text":"+0acxjVb+E0pRvso0FLlFg==;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;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Introduction"},{"location":"intro/goal.html","text":"8hSVUeWX0DmsiHntrXM5nQ==;M/g34JCSOsWbIwq8tg+nGFvhqu3vcHL/Inbz7fiGhOPzSV245nj98ESJOwkeCaPXgFrHCTOZxrt6ZanRQmv79jSlzeo3HEqe6Kps9ZsYs1zezrKGQM0DnlSuq4AtU3FK/rf65znexaxZQviGNZ7gqFZpBAvggFP/b42yPqNv92E=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Objective"},{"location":"intro/motive.html","text":"k00oBnSldyjyRpVirYqZlw==;VRAhI55Aclj3W3FVT4/kxWMDqTBJIkn7srxHnumOsFGXtgdvpO/KkK49Rc8taAjlkoftS5snhjaOO+umm4Nlr1NLvGLzr7KA5qsini8onWMltNwkmuD5ojLFCjyCEACxs6y1fSc3uUVCNItoMD/GM3pGCCaKnzfEDlphTZcGsAA=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Motivation"},{"location":"knowledge/amm/iabs.html","text":"xGhfgxdmCuxxJFLAocolCA==;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;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Strategy Evaluation"},{"location":"knowledge/amm/lob_irl.html","text":"t7QLo23EXFwctTnDQUr0ng==;;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Reward Engineering"},{"location":"knowledge/finance/kyle.html","text":"Sxc1dotm/mNV2bm431oxag==;T+ecvKlujn1qWJdTNEW/zZbog+xtognUrzwh5qtYq8cd9pBPeaxSK1SqrwBsbpNwp6Hnao6PBgf6LgbP2g/4JxsQg9/wThMM3HR/o0Vdh17t3vlefaAWI2Bd1KdZnkykPE2o0Wmv+C5auvHjqRugtGXNWqSnhw6VL6qJLyqaS7w=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Kyle Lambda"},{"location":"knowledge/irl/index.html","text":"noZJ/dmVAQChidTsEyrEDg==;Dowa7/LbimsIhwrPJTTUwgYfinG9U98M9qYgyctyGY2U9Q7AD30Yrlg2NqmsyoofT/ryboztQxSM8HtnRKaDWfQSOG0AEi30mAln3NA1FgUxw8pCpUabKJ81kcK3k7iM9R3jF6U/sxXlDVMFLv438vT84LlIBHu38Q7pB8vB3oH6HENM0dA748R5caZ9S7J218wHHc+t1w7Zvzy3DpEHKyuMIiMyGnsEj71P6W6pL91U1VuWMiB8NvR72kSzXzxC;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Introduction"},{"location":"knowledge/irl/example.html","text":"urdxBZ2L5VbeVi6I1T5fJA==;9/H2aiIZy0ZaoJnevWtMr/LMSUWaLV9zcQccWNvM2E0GYt+UW1dYzfCSyW6UpNDuNnVrA/PwPdLRS/dkNerueSY0t04mHl0KLyYaFysXxQCxE12aMqUs7y0y4ePEUtTNm0u+Qxq3MF5t1pbsMOqW4dP8pBBADpP11QCLTLyqSMU=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Example"},{"location":"knowledge/irl/method.html","text":"yaK5KBI1eG3REWx81bP1Ag==;+HqGaInNu9g4eCK9X9dl5HCd/akCFE+y4gTIbwrFpjqFJy5aB1j6pWQgeP3uCTI8u40iDmqeP4vJ8YdkAwAqPPJ+TVyCkTclcPrmrlHjCpZ05GzJ9bWXMUDu13fqkjyLAFsY6jcjui/zBylyGb2IbsdKjaTHcURW7254J/YD72pm7qISaAwFjI0JK3h0Q0KbWbzMZzhjrZ530uaQJBSwew==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Method"},{"location":"knowledge/other/index.html","text":"tazJ0o5ET+p+YYIOOqC7xA==;24X5hQWPOsfZBwCv44ileGPkLyFdCBiRWXm5mbHmWcvsQj0pzOeUYpspF3McvLMMgQFW55MTr0zdbJg0Qu3dcGhSQBu8/uFIh/ju4j8i+D/JcK48+uvjfCAMLP4l6l2PvrzjoplkbfoirGHCx45G7XPJsxHQZOpeD3dE42YXEPXdISWcq6gsB60TTmQN10Natjsn+3DF42y2Wldyu+JJ+Q==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Introduction"},{"location":"model/data.html","text":"unOSvmRiUjMIGbi2Loue5w==;HxgnrMJFgmweDx0Y59FVaD4To6ocjWhV1L8fDTrcBG3UnRAmyWk/t9/S7tZ/dNnNJPkh41+vDJ4L0uw2LUfCNr8rH9qkakDpmRYahwksetH4QnXiq6CV8CO2mfSeNGZi7vJY1E0CIEOCaC6rLC1Qn9JRydGNjdebE68ZIt114so=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Data"},{"location":"model/env.html","text":"DEDBZbkwetA1aFMgv8qWLA==;HtS3ZSZCdiU1F0Rm14aaeVUTmcs7jwM3OWoP0bbXKASbTgVjWHNA2nE1sPLzEYwDSiAkDBxXsw670cp0sau10N8ChA5mSOnCP6cwU2HTkDbM0tGfzLodROCm76ANLXMxEj4BoOV51ipAGeTr9FV4sngpoM1ITtkzdpJ5RkBIJ3M=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Environment"},{"location":"model/policy.html","text":"uRg4hymRDkjPEPRZg7VL3w==;p+qe6VBgVj945w5EOf5ZIICZD33/JjDmdZyBc8aOjrq37fpeMS7D9KQHHkN2fM2X2hsAXtt1zx6eOqdwLGR1KXMvyws37uTDBGFluZN7mkd8P/gMMDy0lrg8IYcb/eimwgwKXC8e9T7ZQiC6qcB2ZcCOCQoNloRmTZP2n4Q2MG8=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Policy"},{"location":"model/reward.html","text":"xyynh4sr9aCU0YwlEpJSbA==;kmj4MN1OXmjfBSbgjZweMG7K3qsBVMKRe/lxIqFkISgKkvzS6a0RjnYRLJNtAjcB7VOwULWSkFtne01n4i6BYdnTE/IxJj5kD8a24Ao0gE2xNGhmAp8gw2c/D7RoOZ1hfBDnZ8drrO0ZiF298nDoJhPwKlTHzXFUV9zu7p7j9Bc=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Reward"},{"location":"model/utility.html","text":"YVynwXDasM2Y6kDiPitK7A==;qjvBqqW3dYZJWGWO6Y0vV1ChPcUC6hBWC7QvRXmlfJUknms7txru8ihsY3JYQPqQcx431f1IwP4QHk3fOlI5cm8RYnkgFnyZwb/FRjQDanBgv1Sq5zTNzXsK/iVUHuRK0s/tCTjBn9TpRfKnxeSssyfQ6SYbg/zJKcZweo1H4GA=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Utility"}]}