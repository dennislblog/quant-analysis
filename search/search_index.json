{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"ElnGvBXgCPB+DQ8qZIUhZA==;nzmax55o1UDwW0YlroO2T26zllyqDf/QOJF5O6J925WyDYNzciU+Fy5iYzP6LKurMsvBVUKUZ5u1EJ18PR69nMUyGoulvub9RYnpLeVNSzVWOKHM5h6ag+WPCghZTejJMWNdWlG4jqIWMc5RgXluuuMbe5rHyQX3WlAdFpZacnnHvAW4eB6TCZ0WPXPouZTf2KrGDOIJHwvFrCqW3guxEUkt3nDIAmc3eZcC++f+9oT5y0Gno9enHNpk3BBZwM8BQuPZlI6SzNQd51LnIANWCWQf2QhMK3ZOrudwyYcBxqbUtUljfNFrLXN7xV0cmWRVTvpz0l1xiOfXNOpQplAv/a21FlLOyKR25Dfxtm5GnzBHHFegHB8KHrhTeuo4R7cpNZHef/mlUaPMSnzutOdoWdhPhe+ihaCQ5WxEzAADlZqd+werkXdx/WYuA9SuXJkuBv7pZa0dRd8utapKdodyl0N8dPJe7Z3ccuIMovp9t8yMbRznEXWELuXU6VtEvLgu/0A6WtAIRThMgFnIyEHFfJyvTIPiOXl4wqyRbWugeEfjUmg9cGzLEowzyd6wHNotXlJmT6oUN95AStHWRSrtbVv1ZIbcimLA2r+8cgJbY6mzShNH+35KkFTGmN77us3+/PLdEX7KhT/oxoqdXSjqy9uXBhAsqvVafOXObFMuiQCY/kKuYpAgGPx4z8nBVbO5G9uGuyKdH3HkIc+Tl3nnFPAfnQxpkFK3yZwt2SL0jWdPkqvOSuklPNhYJtNhQ8qG2CE91f1DgT/P0DJ/lZTNpu34BeSbwDHFrAYHfZwymHFVluw7EgnxYlffcNyUDFbo0MVoM0ndfBAX+3jb4WM0p0MsZQ9slmytkc+ed+rcgi7/EZ6UuG5Jc0cGPh12MTr34962a/ljQ5lf7zO2PElSJe7NwoU1QibqbLNNU9MI9kKj/ty92Hqfg86PF00kb3Ljh8LY8rqHqh7A601iEMXh52SyCe72cC8JZ2LErRYhkPzlXuytjhqLZo4qP7DTBK7KjjG56FCo+wGu5Z8j6qL6IkFbeCE5PWg6cqS3RWgrSqxVjDxxG1D44QzJSbdaL4Gkc9wCbEAASeUekfxqraY51L6NLYgUIZtNTphh8CO2/ZEvD4AvfacIdxlrRGMGqMASiw1zASJuXUkCIV4ZPXM7XNbZ6/AaGn4eGtP8lH+/9i2gJpmqgJLPws3lJvmKHGjCegF3gYTOOZ3QcEhoNLHtYw==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Home"},{"location":"analysis/amm.html","text":"rbZZRYz2nAivExVAtk65rA==;n6LT3/yvK69OMiAiRvb5c5Tv8kUPEvWK3QJb1Xjx5Guq2TOSVPpncYsHycbvaAnbFm/ITMCyAK1zlUbZHbahPbk3GZ+Qec40zuU7LKy9VRiWYeEd4H+bH4ZmWHlUwR3ze7nQkjEDenTwI0WNArMlCpSyN+/FHqZJHCiECxOKIVt6aRIcRv5F5yFQnj9FXdsouuejmtI0e7ehBtftDeXhlYDkaxkkEdRDM2M8kr/StwL7n4XxFMbvu4pRO+8AQf1r;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Agent-based Modeling"},{"location":"analysis/finance.html","text":"zVm1sfzUrvS4hSKsvfBqiA==;pdkdXEN4hePx946L92ywcY1yT4Kht1u6zfpnXgfGYla4MC+LKNs0Z6+Np/fiyTCQGKca+3zEioEhfpLWLXgHVZ2+S6Ydh6Z6lyhdrNz5I6mncqFRi79CTMcINmUVITjoEhYzZZlim+6W4lHQ2c8muSX33kzF7Okij27KcRQZs1N8bOaWq8ul1/nIfR6n/eTiaEqwHsy8d4tAXzHhJ4+hCw==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Finance"},{"location":"exp/config.html","text":"O7uzkdpjIQx/p7gqxrTndQ==;yN59a5u4U2hrzEvAlVqRz91YdyybPrUlP85cqDhPQ3cB0h8l4b6qm+aSr+8czwXcrBcFnciHGjhv6A7URlI1laJwzA3EwIkCjRF3RNedTTR0rVv4TLsFOVMA6pnrBvl15iu+Ru/MGdXQX7i8TqGogttcx65EUmYbj61ekXtVDZSAHSZQAXUZLbl/QxCRRGZBxQAmf4gOrtQTndQ+6joFoQ==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Configuration"},{"location":"extra/markdown.html","text":"fqK3JCygDhWeEM264fFEWw==;KMvCl98YS3h8zypJ0IOMA8wvBuuschyLNgvLciW00o4=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Markdown"},{"location":"extra/plugin.html","text":"QXSdIzYxIJ3hXr3oiwL2ng==;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;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Plugins"},{"location":"extra/pymdown.html","text":"c2zMMSNJdGupv9l2VOup4A==;;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"PyMdown"},{"location":"intro/index.html","text":"of4aFdrYLmNb5qmqeyQwSw==;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;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Introduction"},{"location":"intro/goal.html","text":"Bx3q8Czu28k1xS6p7bBeuw==;9cjwSxw7a9CA4eSAJTmqVugFc7qglO6p1UsAGNl/N/Edv5zNh2q2cS6XMFox06dSn4lISdb4WHhlISc+aLOXtTdzHV1uMDUbRzS+uuLus3QC89ddQp5USY+aww8oya0HEH3o582JzwnWEcObLxa5tOwxEbYUnvsK1SwU41lvqlo=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Objective"},{"location":"intro/motive.html","text":"0gAP17Tl1kQANjE7zpBSPQ==;bZVpVQ6MG5kp4S3y6TkzZG/n/tHoHpPAa7bMbR6GdTJ4LAAzB5EEPy3w5cwtip281s3qYtuYKxfucfqkOeSp0NLEnOd2QC9I5Y9JkAiAJHIVrJMshbs8gqRiyAZBf27ctKwaHSIv8xWO9TTqBJ+PnaNN8rxv7ix3GRJUsmAHXzA=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Motivation"},{"location":"knowledge/amm/iabs.html","text":"vtynH48C5tShyvB2ULfglQ==;;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Strategy Evaluation"},{"location":"knowledge/amm/lob_irl.html","text":"8YUHDjPHM0OdQ9mC4SfbOQ==;;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Reward Engineering"},{"location":"knowledge/finance/kyle.html","text":"C62QzwHTsdXJSjUV7SqXiw==;+9kjig7DavPEo+utabOIiOA9hOx+L66y4GAObTBCgi8yP+qcYPDxy19nz2OppQbFFpOtJk2TwL1/XBl5XGAO1qqFnRoH1AvkaGLolq03qDBgqOGRT3BKcqc38YL4KctH8zivs+mhzbwymt0o3r3w6lPnwqFltRRqx2YfzKw76e4=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Kyle Lambda"},{"location":"knowledge/irl/index.html","text":"sitTDE2Ge4vqQrz4942XDA==;7NphWzt5G2exlF4DYvbQO897zRLHTkTDiwFCrWYaVUwrgSwGOymv5GCmMphUXdao66/IvWrRJSchaw3Is3mN/mx1ce47Hvdx2/MdDS6cj9i/4HMBtpffo6uEBoSSxgJYO9Cn2sMNEhevmDfoQWuGAYvacAnV3g2B3Ssm8yRfCppCbPJ7wCSIROGh9c9RN8/Zoiv2EdwD0Wm3STqSY2VSQvo3bm/VFcyQ/YwN3W+h78VxUrjT5IzCltMZjpUFZXl/;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Introduction"},{"location":"knowledge/irl/example.html","text":"g4nefIjnflgDtR7RyKcFYQ==;Q40wnODHZnTBj5WtQF9sYzJLiYnojuYgKoeZWkVsHqyCrHtKWklWvJS1eW/y34gXtP9gmG1DU392OcXjMjv6DYoIx2iMGXdI6bchi2hSxSTptCQFwbx/O1MQF5UZxUAaP+QH2xEdRpPcn654jJ55+Q5JE03mrnPSxeXv0t0GpMc=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Example"},{"location":"knowledge/irl/method.html","text":"e0nxW1+WUAWA1+6myAmPtw==;VQlAXYGjI0cosXajLTmghn5fWNjB85liMogrP52QDhMyh1j9K6CJkh3Witn9H01UySuv6yoidpfpIMS804lv0odP2TMagIC8/T+wJmEofFMhOZnOM7gNinme2wkHqc/q1HfGl/D3SACpP2BtVTuyGuoTMdMPzK80fT0QXtU3i7tDtp/lnPeLmL2KMQkyMdLgAW6+2EL0sNZGycWXJexeyQ==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Method"},{"location":"knowledge/paddle/index.html","text":"1Lrj1HARSnEBaKtn4kHezw==;Bql96ey25Go6m8mWQgpDNTt8eS0FcfmcKVfidd+lgRJUikBl54PkwnnFMinZlMYcwxW3GiS5hNXqJVa42iKpxAlpbm1JnhaVMovX5SHCrPdoiGZvISr912SHxO/Hch1d7LEZKMeC2kDSZkyjxpFP+oFJ4v1g9xuO0cavzX8NTrdJw1Az8pMIqZRcQlxcbs2YjPg7xby/iqhJfQ7j3l4b4g==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Introduction"},{"location":"knowledge/paddle/example.html","text":"jYu7UGk4Rm0oFqcSx0k4OQ==;;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Example"},{"location":"model/data.html","text":"/37LsNFXOHOyGsaZfjTopw==;fNZvp5xnc34ejt1lreiHDGP14ctKzMUE7M/ZgWaQPdsRRBLp9rbxWnd2KBy3dNWU957bfcnBBNf8GFA4malCeKfRM4grRAAa5eSO65YeKLVpoJcPE4wU6uoEtjPVzRPXhHBBsF/BzQ6h3d1UbO810AzWbk9mMjQaqeJFNljnhdU=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Data"},{"location":"model/env.html","text":"LXug103A/SGtnXKDevcsww==;sNHvgh8SafSriyDTmnZ8j2lyYqJobNsxBks/mGizsE+KYpr867c7lrdbPq2cQDf5ATrJsDMw977SZ29taVkPgOsWxsMZ0HPGJ88dFWN9V5Sl4JZ5n0j6Uln+xtwUmQQAsg3tz4Pu9ZXLxMmYMxiPcdnqNtd4T+McVYdMEeC9cwk=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Environment"},{"location":"model/policy.html","text":"iKYL25C6CzbXEtRHQhmXgw==;GLvXAoenw52JEMLkbz/buo7RaJtQImypUjDozaOWhcRRLYJPqt+6Koep56Tdud/rZ8ezB5SdgEdsLHSlq+x4qvOlJHXWwibC7WbXnTzO1sWj/eFtCUUJf0cKJMoLCyOSVWC1kZv6jZStahi6D7pH67YdUTpQ5nWp1HmVVif6JpA=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Policy"},{"location":"model/reward.html","text":"cOzAvF5qj2kFvDBdDFSwHA==;rwrQXk1K24JZywH6dR/hEQSyT5+qVg4/kz27mEr9LUS0sPAWh1YkhM+5OIX9YeRMulqL4GJ2tBCF2/yRyf4mkvU2CyT7NHCMQxkaMsryXqqPLYKt1nty9gfaIiNDs7kANutSdIAFGn7pu2JKmv7IaeEarWbGbpmHK589i4pevLo=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Reward"},{"location":"model/utility.html","text":"jL4cFlpaT9A2x2+tfyVXAQ==;ayhcwtM69Cww+Mrqa4cXVlIOAeC+h+hDsxs2TeLS5nzVpMvKkTRH31pnte+4li6+mrdvGV3wZAa41D2/vKx/Kx+qUduYjjE9nwdx/wqMungKKcPUfKPLlQUMdfRbk1d0srO7zrx85Nbw0E9yd89OkaM8CCdgdezLV6z2i3uSJNM=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Utility"}]}