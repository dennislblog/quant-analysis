{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"ZvmJmQOUodjWndJP9kvm3w==;rzs3KwrDKOEztekkd5RR82vZFTCLEgiGX0JpJhJtv9tDmcSM8OtIYfQHGQv3PF7MF3q9oWOHZfOrohuF+2sDPwncMdK7xI1Ylo3TIVzqiRBy9PE9KddpJHz24dOrk6t9I9hpsr8NU4LrhjsOy0MYj9MgAcyaSdlhnJ3/Uqc9J3SaByFFd6SfADIypnMkzeRLSo6za0/PacoDzxCc7h8gopaT3/vZnK6eDXLrTZoVDcATQmvICWkiOXOQ6cnymQemZwPoXGc+cnx8yG96fCafgRhzzy6lmIvu9UrXpL/5gT6jWpwH80Ecklhkw1aiNuriKaIhmsPvkKW9xq9rKOgl7rMiOmQRMv3zOw3HDU7e5fziKcivFwFlB+CB3EZFJd/2pztK4Pbqr7xahpF00NCHMN/B8pEJutPOaLIrlR7Od7KjjNcQQ6ZESsZVztM3rdi0zscQO1Pd7DMpvtxp2kx5MKIqZpayGGSc+FFqS6MEut42qaACqh5VKv3RrS9m24r3TebaB9D+UEVzeo9wfMJs3JOd6QbKX/k8vMtVlvGzqchJa8DnMtO/6cbHKrBMdJbvvFeogw9tNHch0h/tKWjcaEcMK9pT54w+Thxfp5eDaBekGbItM9lEDWRZbF8m1mJEnQS8Jg5tNyChb91pyGCNPmE/1kmkbkjYgulYEMEoPI7uKXzkiZCHj2H+kWQQSci7f2TPRsuOegQCZczxwS/Bd6paLlvAuajB2peBWnyq0gxE86nLUpGT9Celnj8hX2D5CKk1JK4LvOJKxKo76MJei4QzqZnltI7y8u40W9YN/8YVcT2mRhWPD48mfwVrDaL7SOK/AZx5pGPIi5vavMS4czHiqAUYIsYelxW8o/mLVU/0NQ1UazRfGbWCCIgeLeTzW1ySJPzcqMGzJtKQsjLicHRqFEe8QO5PXkz8hg7YC2qliGexRrmCtcCdfgFuRDLN+ULSAR723q7324gdR5ZZY5YR1j1tHB7K0lgQYX+DG82G17roIq08mTxr9GPIynL1f1/yAhIXP/cITsrTFNgGq/9qijHJ8AuoAHnjnJZKPZkGmOd6E1GAsoocWZZUnKPC3lVtv8lPiCBL3as8rlBqNmUOASlqTACCtGoXhiy8ir6RV8DI9n5lgwG77WmZOpXBYCg7eehrtvpvN6BI+jHIEoBj9aiRAP1lUxYepz7Ln6011GC4QgOt7LXlkx52kll5cjEE0tSRHJO9pB2MRPB1HQ==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Home"},{"location":"analysis/amm.html","text":"OtOgGcRVCazY3Cg70vuUMQ==;Pr73FzYGRVP7dBYwgtwitcRygJHCH+G3MV5Pz2qxbRhV5f5I28zcA5fviY3/jdWF7m4Lv6zxxsK06Jeg4qy4AFzJ3zH9wA5zCiO7R7z5tD7h8Qr0V3SGEzVfAIEEVbahH6+RpzekgbpO9Yu05zSLF/LZ+Olwpus4gLnoTSHBtUFkO5IYiIpHBQ1aG4FLadTpyKULIjIAooLh+J65LVZiAd84xm90eGaKotOD1UgZapXQUbGJaNKSNBpzRbTrZV0Y;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Agent-based"},{"location":"analysis/finance.html","text":"bfuAssFGxt4Pl0mjNJEBNg==;gzzX7jbsOobcwBI5Eq28xEMdbw1ZRWI32qMh0ychkCZ26T97MHdful1q7X6yovkZczV3QYrxTxM07o9MAKBvO0p4zoZJfWWHDWvOTFdDRoBVw9zli880WrL9D/u4HoUCg0rDkdrLQYSAqTkrmM1iuRKQ00+JZ1w8ZYaVh4oXWUJbKOQx0G/VTxr6O961StxalGKKFCyKZBA0g7mg4Dq+1g==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Finance"},{"location":"exp/config.html","text":"cbZfvsdzLXzGZwnW2bf5/A==;ovtwqFS/3u2N4EoxyrH/TcGJoGWSIAhLAWIgfs8SfGC6+0zbWh2E4QPNpdoO9KKCHHrqJuyqanOtOy7tL1iWhvzBLGRB7t1sYJ4Q3B6z2pRB8iNIN/N6Y6PzHPMv7F4D0sdDLQuu57J+0vu1fte++oD6UDieGvRubCtW1EpEXYIBK0q2kNofLHEuCV/fPAJEmgduL3HReWoZ8em7vi3MKA==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Configuration"},{"location":"extra/markdown.html","text":"7NNsKgmse0SB7nHVoISX5w==;M45oVzQXmIjJd3pedArU3FxFSCUBL0hk5jRYvjgy9DE=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Markdown"},{"location":"extra/plugin.html","text":"a2dJu1xQX4HBFsGU/mcRoA==;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;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Plugins"},{"location":"extra/pymdown.html","text":"q4/CRYkGJW1y96zHUHZ5Bw==;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;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"PyMdown"},{"location":"intro/goal.html","text":"YLR9+bLevaafATV2moSA/A==;p8fbKjCCYbQQfKNZt7WRdt0o1VACyP70YQYxghqLZHf19bzY4TAmkihXsyTGsNUvyZoHFzvcnwHmyW5h/tvDBaIuzxN4tFUIibTzLvg/KVVB9YwWxpCBC9H9LSTt5C38xRppLgFjrmC0ojfNiqc+IMJrOcac7uAlPvWeqCD5IVY=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Objective"},{"location":"intro/motive.html","text":"XxyWp0Bv9NiBIjPiekeC6w==;fXYBk37BQ0t5qLy1JpSkk5blWoIqSmtkMrVVWCy5e8YJfBsWEm2Sy5fr2FlJ5uXkqggqK3qofdZhE0Ph4Da6DGT4/HVhXiKkf8cvv1NkYr1bg7bWCxFdwwvEB2sKZKeHYhcwjZIr051W0fewS5/tY6ryz8lAMAN4ZjmkkSvmsSg=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Motivation"},{"location":"knowledge/amm.html","text":"nXov2W/B1Fywwk3yQcbqMQ==;;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Agent Model"},{"location":"knowledge/finance.html","text":"wUmxq8S+JEEd+U7HHmn/0A==;2cKd0opYEwEDQsbd6+zRtiAr0j3iwyJVbl+pEA4gtjd0Zu1QqfTOu3w88XworXNj+HQLkLUR/OYWJKT+k7tjnJGcvurjzMB+Kjec8hfYpbgk4SFR5aL1KdlJoDeadLGOqK5qW+6bepvcG7Sbd0hp45CFBL/KAjvOJ7R6/fqDMX8=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Finance Model"},{"location":"knowledge/irl/index.html","text":"yoGjjUpfsY1QAUyAGIaO2w==;UI7y6uy6v5FgWU40abuxoJ8sXiSKqqFRQuCYulJYCDDYweCo0w/NBvuSb7mZaXS7YGh9pMwtlN1HDASOkvP1Rgx0rd0ZaC+GudqI5HwKk/IPhaBufronxEw+54RotJ+8tYYKD7okOq3lN+29yvra9+9ztb/q+ZS1sOrXZYsJ4s0EdCQf2d5FZwrZneNvxO8o1xWZJr8y95wiw9DqbEGddOYTlwmIEOHIWVc2oYgFSO7okDRzpTjawO3CdGNoVk7A;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Introduction"},{"location":"knowledge/irl/example.html","text":"XL+efxm6KiA4sMym0odpkQ==;MCTBBD+bLwblOTfBbOBqZ8NbrcmUMU5N+sBddV661GoLK9trMCyTadu9ZABHCTphNPs15zzT0L1kfSsW7//64/wqjfgehlleAY8vAFW3gRUS7r3Ybcts57Cs0/XhbJoMXUx66yEi7qy3Iy2IzhiNVtzh+qE0/nOlIjNdzBL9vYY=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Example"},{"location":"knowledge/irl/method.html","text":"vzVHsOsGRYjdOUjcn1r11Q==;qxIuSXRbYOmCj/UrZ3P1vVZph/ifbZzCVAMKLWXhG1mdisHfI3sqfR04ebcumwkuADJlt2UDdP6NK+oYn4L235cSCt2LzWecxAjUinuVjgMSjHgeyp15J6fPtiG60KwSfaw0Vtr1jA4hV5b/x8UGJ1zo1JSdbkvpr0OQOliSH/hDfWtV6gGGnPMGVNcIG754jk0f576RRURDUeK27Y3tiA==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Method"},{"location":"knowledge/other/index.html","text":"RfkT4Upanqn+Ap4oxz0FIw==;UL1X4Gpt8o+3tqjwqOz/MVAn9wV0GgZ7TSVHs90ohaPHLw5BOgM2hzGX2u7N35x6oNpYxsFGVX+0CxsysoSmuLEja3p6r2cG0WCwSym2/rd3NSjTiYNskjpXbguTeSPbAle6KsWC/1t4YpAVbjbmjrstSHAsSru8fNlpMxzH5SbJk/4hjhZK3v85weCcB+Rpu4EN87VaGJojHbzraIZZYg==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Introduction"},{"location":"model/data.html","text":"UPo/zq3uRgeVxEAjkcmScw==;w40rdrFTzkI7R7E38EdElN/hfw/lk8HhAsdScJvgY7Br0msfhXlKCigYKCxiNn8m3/sVuerYaL+zKV4xhFqEHedFD0YY/g3+e57rt+y3NtLHedS2yv1j6etpCoSDN3mjj2fFdYdZQHE96Dh02WCy5AIDS5F7QPhFgMhrmOjPNYE=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Data"},{"location":"model/env.html","text":"xnfhaNGVWL2yAiJLpVbIrQ==;6NnWQidnhDgspTKWLlcJxDUh4FY7/dzAWXkBN/I+ct+XFLyi7Wpx2Om8+Pr5vv9hoG32OoqasZlcectTWa2rhzwFVRuM/UYceakNAXsj6H0Pq/qrC3FfA1Fet2Y4V0sARunnSzqqM+Grz8o1jgxcfh16uAkLxjqqgvQ021RZBQU=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Environment"},{"location":"model/policy.html","text":"xkCWsdMclVQSLujiju/z7Q==;+42F1VBvX4+A0fi9oUy2TNdAWS8/wN66boemqSPVA8QRHYT84tcVqc3jpvfozB+yjNvvA4FtakowK9Z+AIsLaJMQrP8Y7rpLnj6MBvzIpXpzHXoTab90+CqHpQDTdAyw5+Ym5wAG1QoY/2j+oxOZEXpfLCpN/e0E5WQhUIaEcRE=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Policy"},{"location":"model/reward.html","text":"q5qHQJjcnWpTip5wq9i0qw==;ezvxAIVwUsH3SQ18mhhAuexhp+3wQXMYgDtvQ5wTiGLyvrS05A3lYOIEH5RqvaeDp0Jgk7D4DVJGiMEwxdc4uGT5TvLHvD8Vzkn2UBKSicMbNbUUs6fh7/EzqSg/VmJdrGHeWOeEww38huxwHRHx66IiSnXQjKrFX6o0+WMufNc=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Reward"},{"location":"model/utility.html","text":"GgDWvj1Ymq9vViukQvF+9Q==;kuzRWQ8iyUefycdUhHvbiSvjuQixxJdIkE7LZF2RktTgkZG1CUd7yIFLiFzwcLbqDoqxK5RMR9tzCfnmhJIksCWo/ySHGbGGglkckxKROdXRoaAxJuSYPA6/izSlDI05keBKTIhraI7TuUlzXUE5uqqIeCbbU83hCmrNzYFheQc=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Utility"}]}