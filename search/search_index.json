{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"JS8/xAM8syk4Y73/rZQyWw==;kGBGV71BdIjovYpTmpF7eTsKOO87uOBXrd1kJt5sVRXx0mfpUcdrdeA+50dKdRXj70U87vhXa2UQzQ/C0ooNqKzZlPSzxMoXro5wlHvAfY7xhrcP4DSlFthi0x4peT7Ji040lrJa8mRw/GOBxDKMUq1rvhxcmx+ivblMqSq23PN1DZwH/k+Bk2hsIMb0n4yWZ7Q3s9Ml7Kv2M69CrLGT8HT8/0IhwX9Poyz69nz+EJiF+XKG4CH/joimJrFO42T46uz4FTKgPGhMHmvS7DZ8xEDUidVQ32w2Gi4zgGaF70jN8utVkHNmY4rK8Qb4GnMnlX/6vOTzUcMnkWY0y4KXEOFE4Qljiqry2yNBZR0x8PQmLsGiK8G0R4W9GQbfsOvD3Sj7IgnV2Oa/a7wx4VEZs+JU8SKRqV1jJA5gv7hBnx8Flf8M/m6bRLH0F4FMkKkURkSlj9OKPHbYIQOcYADxa8AKOi+18GplUjGhUPF91ee6uJbJG6KPrl/tSONC+yN6tzJ6VCO0S0VSKXjE/NWFm6JiNENawhFQa72oaNTkO0ynd1zvhnKPiVv5AMEFxLT9pz2j2yUImNMgCwnpH5AxDtQ6A94Iz3TSw3iKCBpkj8ZlaSXH6GtHuv7wOdSKSovGeps0X2ciuhJDkfnb2JpFfudF9aFvvSm9P4/Bq1mu3eiaYA7MDveJ1TMyBQvZoJFtmdTAfKMhmRUWOK/CCEMXKB2a8Hw1pvnYVvSzo3w4KJkpzb4Kh5MYcv9SrwL792zjSjevGFtEpWY6S3fyUxczMO/GCY/6lfofCbwhXBGPEQcMsYAqq/bpHqEBhDMwpR4A3fqkW2PJLt/RRQtGoMjYbl4qcYKGKUBdd9NTHXT0jzgKrjMwoyTblKxGyd6SsArBNkb+ActEhjRMFkvXMbwlrgg3dppinf/OyoO9bHD68qAro+VgvKKOGiVTxWKrYCX17pVNlhvAe+xpCLW5ihD1PVaWgH6q8sTkYqnqceoyh23TCNgP3sD/e+QJCYNZfk8USNAYrlXf/nPedTAdtwol3ELPDD8/jrvXUJvP65M98FcrprhSaV+hYVzll3BDNLtRPqxyJkUjc679yJEY6KBVVFiega+vUW3TKiSmCsk85C3iVIA8yFk6Djqp+6OF7YR4qzkqM9KYBw4f+OqAi02tmUHjEnqjxsNzCwpPRDurjuuFZsgxAvscBhBUh8LHcmY+wBfxwJyZVMC0vprljBls2w==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Home"},{"location":"analysis/amm.html","text":"L1/zOSAe5wOFUoDZB/Pepw==;w3jpFIkC46lRMkYDZ2ctf07AlgERr63nyHXTN+bOI5IRntC/SqrkCs7tatQ8/NvZQXVwOPKXLVYT8fjTIhJoL/YvIUnaNBdfK7qnbIeAzDijoNKDzE1kYYpNzCuAGbqLwpi/v80BeKH0EuG/fZb9NKUjgzTp98e2fHlFS7n/HOawu/kQ5Xmn0lygaS9jajZAXMg1WvA1gWSyoyF/5L8qPhDBBhlOUInToVX2xB9c+O/COSEyPdVaWj/rvX/l9AF9;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Agent-based Modeling"},{"location":"analysis/finance.html","text":"0ufWe++uGTSueXTw2Mp21g==;GJ4eZoto98eCcyaFHd0UBHFVG4q23aBQHwo0ee4naxb68kcleTsfAwDj7vw//+6Sf4nLdxRKtEONUm/nE3WRouSlc0wBNoAivFnjAuPDySZHAAQCd0i6wFe1vj1E0PWVpYbPyIOa6tgt4AbR/k13A2BZSogS9M7TD40XiPC3juRHFEdLa6xF7QmMjiZUeIPxT1zPM6tEH5XjNyEIY8XFjA==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Finance"},{"location":"exp/config.html","text":"bqb5gkrifWSzzdV6Girx6g==;amrfXmI/tzRI9yNADwutpiS8eeby4r+8Q1xh190RduH6VfpwtTgNM+Pd4Q0/6I0ALRmoqTz4n5Lm6PHbwRo/LbkpptBmgE15b5I720rtnI+cGc+lKiL+Nf5zoozrVwEx6qSr3pHc8EGUevZeylWB9VUgrclsoJkwNqsVnL7R0f+oiOcU95Zf0XhXYeeeqbabnAvK4xqAIoHyxeyPaE6cIg==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Configuration"},{"location":"extra/markdown.html","text":"HFnr8QUw7Vjgrai+yqyIyQ==;c3mGuxVep57Ir5+NJeufShIN7xALSdRO9gdqPXDuSz0=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Markdown"},{"location":"extra/plugin.html","text":"b1nGgeQTSyGfdX0W5KOZkA==;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;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Plugins"},{"location":"extra/pymdown.html","text":"7h6PkX9BhIWuPl0It3zLyg==;;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"PyMdown"},{"location":"intro/index.html","text":"lxZblBX/cyFiDQsZ7MT3qQ==;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;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Introduction"},{"location":"intro/goal.html","text":"G/wcwiKCP0MKh3WQaGgMaw==;am16Ku+/F5LRDq+B+4pNv65Gcvp378vyGWmbzoJfE5c588cYnHYEFTWn9ubpPd2H3tTfeiQfAls/ocFFCAUL0ohA8mtuNGzC1pIW+FQBz0r8JIZSdS7jf0f1jJLzqwKawwVrlrl+dBJFR0zOs2qvbxA9N9s3IrjWjHADjhLiu8o=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Objective"},{"location":"intro/motive.html","text":"nPqNlO6VubF9RCiPR/Hr1g==;TcxOe/VB6f8STVwOf2mltqlD+VzYq7dVTOndJjHtLdZpZJ1AynpCzPqfjkHDXflE36kbUzIvcN1J+aVtnsODcpdikeDyVFppr0cJV40gwvGkQp9kYJkXFVWytfACwctoIh5Fbad7qyyap+VjJ9X+CdjHMsknRrOQaMpgGwI1r8o=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Motivation"},{"location":"knowledge/amm/iabs.html","text":"plA/XsS+U/foLVQ/mdlmyA==;;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Strategy Evaluation"},{"location":"knowledge/amm/lob_irl.html","text":"10aCF5VQuekmBnP8BeXjJw==;;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Reward Engineering"},{"location":"knowledge/finance/kyle.html","text":"RnynSRCqg/aZpUSQCOeLEQ==;2t9qmJmElhFcfgKRyrOqAsLiuf1uYl6xK2okQZ8xm/fU1zEdoEYcgIRD01HY/K5DiJdLLGC0tJ+flxMm+DXq5UrYIAD9SU6pbXEs5Z5Ny2CWwa7iE4PLkOOYPaO3Zjj36SuHSmHwuSy8PxE8S93EriIQQHs3QbdlTbPboPZ9Wt8=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Kyle Lambda"},{"location":"knowledge/irl/index.html","text":"oGI7t2Yd9wiNHpmNVeZVFQ==;iy0phM0k2c8lhAHXjrJGsnzXllYnWfqmQlR5TBivkPnQD05/Y8yKU0JLRXIcals38EmSH1j3JffBZEPE4XI2/ski/NkDDM9XehsKCcbmoak3Iip7GOB4b8D2ceEDVjg2Zw28lVnboMxtXTeFr9cxhhtlQGVSv1rxPwKb0NaxapjYXqIjhytmxZSLCShcgyPCsxqra2WEB7mK9VU1XUnD6t5udtmsNtNIf2p5BHk0aokpgeG/O+K4Zk7QfVM34L6R;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Introduction"},{"location":"knowledge/irl/example.html","text":"2ZD2tFvYMamLRupY9YXNnQ==;JolN1c0AeghM5LLIyMkpIGTYOtpk02SniloABPMojCl81Z6IiE5UeRAaYWksKzj3oB+8R6Fy6XdgYP1b1pEQQniRfUfZK/lUL3ROq9Mob9JVi9skdUpe52QLsJg7OElotRDezYzAfSyJsjCSinpy7saUfvu08wIVK23eniGjKaA=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Example"},{"location":"knowledge/irl/method.html","text":"zio/QlKi+dzc+AaZbhF+kA==;an4US1zhGamHWs2ZUu+GNiTvtwx061lBnwu7uByyaX092SmokU2Fu4Q0rrsNPnyXMJFxWOtMHvFGLTXjP4Fk372WDgRaav7dYekWOlDopQDQLggEwU9sRGzM1Yv5QA66L+b9aOc+KFylsVWH397x31tgpBjJLVuU5Sb/JX1Qt1CtG8RpkTa+QKLYx3pNmz5YkunRbBqDij9SCQVrywAwGQ==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Method"},{"location":"knowledge/other/index.html","text":"k5eZ0Z8KEuUM43RwrVRchg==;o9DL7pOi2t04QKM6YZxQyVQvh4JL42buS6tb14VqxDlY6kkfyJq0JSaqY1Q9pYvJYhSLBlFkB54OHp3ONPnH9uAGZHKMiLUm2YMB3fUOURocv9Q11NkNCvJC20KEfqbcHJkUaWX0O3WMMh+i5s8UDfIZeYfS1rXiqulkeEJdjuJW/MZRYscP6NArymGaWCps/eX63FCaa3Wp1Vu0qArGFA==;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Introduction"},{"location":"model/data.html","text":"iRXAm+Ezv4VwglB8YpKhZQ==;f2jPnuO0JOndiNW0EqfuHPr3zC6t+Pjh0wKNqZ5yQAvGsRBRxmwVtFO2alz3GhhY9E95jIWIi0JUnAmS/s91GVsug/T9adAGTZUthw3+RbRljbPpTXB7ldcuWfq16/xA7Ea7ojntG292FtUoEgvifsCZMehHCQD6QdCzbFMjEsQ=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Data"},{"location":"model/env.html","text":"eA/eMZqYzzApyVqCij0BHw==;nEBB7Cg3CyIgViymhVVf1yfEgu0ur5Gh6+ISM9+U0RpdKylQh8F2+q1UkGucwC/TwJ0V2glmCYS73e07CFWkiZ6VNupo+gMErfwYy3Yr4BAjfT331a58Junv4BU1gYQmqGgh/Sg9n+Ci70414tBDLzU4N6TZmSOtQP08UYSLRiU=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Environment"},{"location":"model/policy.html","text":"5LrquH8I6PmbcBeK3m9wSA==;6do9JTWSF+H3O3m3z0diStsTSvMMz3TeLVLOp5g6A9Z7C6Hnv/b9gQt8rWQmhki/QJ+V4n8B8HO5GZbECaEiSAFkdlb4EU5vRQRSXkqb//lBun9kUWknTDrmATzWgcVy0dG1PbkyOwm0OqhfMkg12RD4m+eQ6du1lBFS1JWAyAY=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Policy"},{"location":"model/reward.html","text":"hEueJEOP0lWxvGW4MhaEyQ==;9OnTdqkU/z37pDYpbubxC+U8paKfPKxBG8vJRfWgb3KnnGxVVcGO5j4w1HKAMlxqwc+SLk/N4dluLPmRP90rfJpNFYYafO2aonbLT4HyF6Tr4P4bWRrbt9BfLlUwdd7TgFuN3ELk8LnG6sd3w4gaoT6E6t7CJrgfn+BQkWL0H9o=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Reward"},{"location":"model/utility.html","text":"Q2UdlKSDLnu8SRs1TlmRNw==;Q71+Bx9XV/MV2JIMRHAMcg/g2dw5PWI2RhuGhrz/KDE/TCk7lp98r5FuHprZkDp45zjJYyiaKRelV4164gLnkmv7zNn+458VyYbpvg2fUrfbm5wJrL5GOISiaNoFdj5TpQ4Vtjcp05aj00AovM0bnNE3Boa90XWKSFvJzkE6Q3M=;^ This website is encrypted with AES. Password is required (function() { var strip_padding = function(padded_content, padding_char) { /* Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i - 1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function(password, iv_b64, ciphertext_b64, padding_char) { /* Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding }); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var setCookie = function(name,value,days,path) { /* Set local cookie to store password */ var expires = \"\"; var current_path = \"; path=/\" if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = \"; expires=\" + date.toUTCString(); } if (path) { current_path = \"; path=\" + path } encryptcontent = name + \"=\" + encodeURIComponent(value || \"\") + expires + current_path; // add security flag on cookie encryptcontent = encryptcontent + \"; SameSite=Strict; Secure\"; return encryptcontent; }; var getCookie = function(name) { /* Get password store in cookie */ var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; }; var init_decryptor = function() { var password_input = document.getElementById('mkdocs-content-password'), encrypted_content = document.getElementById('mkdocs-encrypted-content'), decrypted_content = document.getElementById('mkdocs-decrypted-content'), decrypt_form = document.getElementById('mkdocs-decrypt-form'); // Adjust password field width to placeholder length let input = document.getElementById(\"mkdocs-content-password\"); input.setAttribute('size', input.getAttribute('placeholder').length); var decrypt_action = function() { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here // } else { // create HTML element for the inform message var decrypt_msg = document.createElement('p'); decrypt_msg.setAttribute('id', 'mkdocs-decrypt-msg') var node = document.createTextNode('Invalid password.') decrypt_msg.appendChild(node) var mkdocs_decrypt_msg = document.getElementById('mkdocs-decrypt-msg'); // clear all previous failure messages while (mkdocs_decrypt_msg.firstChild) { mkdocs_decrypt_msg.firstChild.remove(); } mkdocs_decrypt_msg.appendChild(decrypt_msg); password_input.value = ''; password_input.focus(); } } /* If remember_password is set, try to use cookie to decrypt content when page is loaded */ var password_cookie = getCookie('encryptcontent') if (password_cookie) { password_input.value = password_cookie decrypt_action(); } password_input.addEventListener('keydown', function(event) { if (event.key === \"Enter\") { if (event.ctrlKey) { // set password on cookie with default path=/ (Overwrite specific cookie) // this cookie can by use on all page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1) } else { // set password on cookie with specific path=document.location.pathname // this cookie can only be use on this specific page of your site document.cookie = setCookie(\"encryptcontent\", password_input.value, 1, document.location.pathname) } event.preventDefault(); decrypt_action() } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","title":"Utility"}]}